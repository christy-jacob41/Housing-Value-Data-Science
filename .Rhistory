require(MASS)
require(ISLR)
housingData <- read_csv("housing.csv")
View(housingData)
View(housingData)
names(housingData)
houses <- cor(housingData)
corrplot(houses, method = "circle")
# finding out the correlation between variables through visualization and plotting
require(corrplot)
houses <- cor(housingData)
corrplot(houses, method = "circle")
# finding out the correlation between variables through visualization and plotting
require(corrplot)
houses <- cor(housingData)
corrplot(houses, method = "circle")
houses <- cor(housingData)
corrplot(houses, method = "circle")
houseCor <- housingData[,1:9]
View(houseCor)
houses <- cor(housingCor)
houseCor <- housingData[,1:9]
houses <- cor(houseCor)
corrplot(houses, method = "circle")
HouseCorMat <- as.data.frame(corrplot(houses,method = "number"))
# finding out which variables have a correlation of more than 50%
names(HouseCorMat) <- names(houseCor)
row.names(houseCorMat)[abs(houseCorMat$total_rooms) > 0.50]
houseCorMat <- as.data.frame(corrplot(houses,method = "number"))
# finding out which variables have a correlation of more than 50%
names(houseCorMat) <- names(houseCor)
row.names(houseCorMat)[abs(houseCorMat$total_rooms) > 0.50]
# predicting the median house value as a function of other variables
lm.fit=lm(median_house_value~median_income,data=housingData)
attach(housingData)
lm.fit=lm(median_house_value~median_income)
summary(lm.fit)
names(lm.fit)
coef(lm.fit)
confint(lm.fit)
predict(lm.fit,data.frame(lstat=(c(5,10,15))), interval="confidence")
predict(lm.fit,data.frame(lstat=(c(5,10,15))), interval="prediction")
predict(lm.fit,data.frame(lstat=(c(50,100,150))), interval="confidence")
plot(lstat,median_house_value)
abline(lm.fit)
plot(median_income,median_house_value)
abline(lm.fit)
abline(lm.fit,lwd=3)
abline(lm.fit,lwd=3,col="red")
corrplot(houses, method = "circle")
houseCorMat <- as.data.frame(corrplot(houses,method = "number"))
corrplot(houses, method = "circle", na.omit)
corrplot(houses, method = "circle", na.omit())
na.omit(corrplot(houses, method = "circle"))
na.omit(houseCorMat)
newhouse <- na.omit(houseCorMat)
abline(lm.fit,lwd=3,col="red")
abline(lm.fit)
abline(lm.fit,lwd=3)
abline(lm.fit,lwd=3,col="red")
names(lm.fit)
coef(lm.fit)
confint(lm.fit)
# visualizing data
predict(lm.fit,data.frame(lstat=(c(5,10,15))), interval="confidence")
predict(lm.fit,data.frame(lstat=(c(5,10,15))), interval="prediction")
plot(median_income,median_house_value)
abline(lm.fit)
abline(lm.fit,lwd=3)
abline(lm.fit,lwd=3,col="red")
# multiple linear regression
lm.fit=lm(median_house_value~median_income+households,data=housingData)
summary(lm.fit)
lm.fit=lm(median_house_value~.,data=housingData)
summary(lm.fit)
lm.fit1=lm(median_house_value~.-median_income,data=housingData)
summary(lm.fit1)
lm.fit1=update(lm.fit, ~.-median_income)
summary(lm(median_house_value~median_income*households,data=housingData))
lm.fit2=lm(median_house_value~median_income+I(median_income^2))
summary(lm.fit2)
lm.fit=lm(median_house_value~median_income)
anova(lm.fit,lm.fit2)
par(mfrow=c(2,2))
plot(lm.fit2)
lm.fit5=lm(medv~poly(lstat,5))
summary(lm.fit5)
lm.fit5=lm(median_house_value~poly(median_income,5))
summary(lm.fit5)
summary(lm(median_house_value~log(rm),data=housingData))
summary(lm(median_house_value~log(households),data=housingData))
na.omit(houseCor)
houses <- cor(houseCor)
corrplot(houses, method = "circle")
houseCorMat <- as.data.frame(corrplot(houses,method = "number"))
houseCorMat <- as.data.frame(corrplot(houses,method = "number"))
e(corrplot)
houseCor <- housingData[,1:9]
na.omit(houseCor)
houses <- cor(houseCor)
corrplot(houses, method = "circle")
houseCorMat <- as.data.frame(corrplot(hou
houseCorMat <- as.data.frame(corrplot(houses,method = "number"))
# finding out the correlation between variables through visualization and plotting
require(corrplot)
houseCor <- housingData[,1:9]
na.omit(houseCor)
houses <- cor(houseCor)
corrplot(houses, method = "circle")
houseCorMat <- as.data.frame(corrplot(houses,method = "number"))
houseCor <- housingData[,1:9]
houseCor <- na.omit(houseCor)
houses <- cor(houseCor)
corrplot(houses, method = "circle")
houseCorMat <- as.data.frame(corrplot(houses,method = "number"))
lm.fit=lm(median_house_value~median_income,data=housingData)
attach(housingData)
lm.fit=lm(median_house_value~median_income)
summary(lm.fit)
# finding out which variables have a correlation of more than 50%
names(houseCorMat) <- names(houseCor)
houseCorMat <- as.data.frame(corrplot(houses,method = "number"))
# finding out the correlation between variables through visualization and plotting
require(corrplot)
houseCor <- housingData[,1:9]
houseCor <- na.omit(houseCor)
houses <- cor(houseCor)
corrplot(houses, method = "circle")
houseCorMat <- as.data.frame(corrplot(houses,method = "number"))
lm.fit9=lm(median_house_value~factor(ocean_proximity),data=housingdata)
summary(lm.fit9)
lm.fit9=lm(median_house_value~factor(ocean_proximity),data=housingData)
summary(lm.fit9)
summary(lm(median_house_value~log(longitude),data=housingData))
summary(lm(median_house_value~log(rm),data=housingData))
summary(lm(median_house_value~log(households),data=housingData))
summary(lm(median_house_value~log(longitude),data=housingData))
summary(lm(median_house_value~log(latitude),data=housingData))
importing packages for regression and tidyverse
library(tidyverse)
require(MASS)
require(ISLR)
# importing dataset - hard coded
housingData <- read_csv("housing.csv")
# quick examination of the California Housing Dataset
View(housingData)
names(housingData)
# finding out the correlation between variables through visualization and plotting
require(corrplot)
houseCor <- housingData[,1:9]
houseCor <- na.omit(houseCor)
houses <- cor(houseCor)
corrplot(houses, method = "circle")
houseCorMat <- as.data.frame(corrplot(houses,method = "number"))
# finding out which variables have a correlation of more than 50%
names(houseCorMat) <- names(houseCor)
row.names(houseCorMat)[abs(houseCorMat$total_rooms) > 0.50]
# predicting the median house value as a function of other variables
lm.fit=lm(median_house_value~median_income,data=housingData)
attach(housingData)
lm.fit=lm(median_house_value~median_income)
summary(lm.fit)
lm.fit9=lm(median_house_value~factor(ocean_proximity),data=housingData)
summary(lm.fit9)
# confidence interval of 95%
names(lm.fit)
coef(lm.fit)
confint(lm.fit)
# visualizing data
predict(lm.fit,data.frame(lstat=(c(5,10,15))), interval="confidence")
predict(lm.fit,data.frame(lstat=(c(5,10,15))), interval="prediction")
plot(median_income,median_house_value)
abline(lm.fit)
abline(lm.fit,lwd=3)
abline(lm.fit,lwd=3,col="red")
# multiple linear regression
lm.fit=lm(median_house_value~median_income+households,data=housingData)
summary(lm.fit)
lm.fit=lm(median_house_value~.,data=housingData)
summary(lm.fit)
lm.fit1=lm(median_house_value~.-median_income,data=housingData)
summary(lm.fit1)
lm.fit1=update(lm.fit, ~.-median_income)
summary(lm(median_house_value~median_income*households,data=housingData))
lm.fit2=lm(median_house_value~median_income+I(median_income^2))
summary(lm.fit2)
lm.fit=lm(median_house_value~median_income)
anova(lm.fit,lm.fit2)
par(mfrow=c(2,2))
plot(lm.fit2)
lm.fit5=lm(median_house_value~poly(median_income,5))
summary(lm.fit5)
summary(lm(median_house_value~log(households),data=hou
summary(lm(median_house_value~log(latitude),data=housingData))
summary(lm(median_house_value~log(latitude),data=housingData))
summary(lm(median_house_value~log(longitude),data=housingData))
houseCorMat <- as.data.frame(corrplot(houses,method = "number"))
summary(lm(median_house_value~log(latitude),data=housingData))
summary(lm(median_house_value~log(housing_median_age),data=housingData))
summary(lm(median_house_value~log(total_rooms),data=housingData))
summary(lm(median_house_value~log(total_bedrooms),data=housingData))
summary(lm(median_house_value~log(population),data=housingData))
summary(lm(median_house_value~log(households),data=housingData))
summary(lm(median_house_value~log(median_income),data=housingData))
# predicting the median house value as a function of other variables
lm.fit=lm(median_house_value~median_income,data=housingData)
attach(housingData)
lm.fit=lm(median_house_value~median_income)
summary(lm.fit)
# multiple linear regression
lm.fit=lm(median_house_value~median_income+households,data=housingData)
summary(lm.fit)
lm.fit=lm(median_house_value~.,data=housingData)
summary(lm.fit)
lm.fit1=lm(median_house_value~.-median_income,data=housingData)
summary(lm.fit1)
lm.fit1=update(lm.fit, ~.-median_income)
summary(lm(median_house_value~median_income*households,data=housingData))
lm.fit2=lm(median_house_value~median_income+I(median_income^2))
summary(lm.fit2)
lm.fit=lm(median_house_value~median_income)
anova(lm.fit,lm.fit2)
par(mfrow=c(2,2))
plot(lm.fit2)
lm.fit5=lm(median_house_value~poly(median_income,5))
summary(lm.fit5)
lm.fit3=lm(median_house_value~poly(longitude,5))
summary(lm.fit3)
lm.fit3=lm(median_house_value~poly(latitude,5))
summary(lm.fit3)
houseCorMat <- as.data.frame(corrplot(houses,method = "number"))
lm.fit3=lm(median_house_value~poly(housing_median_age,5))
summary(lm.fit3)
lm.fit3=lm(median_house_value~poly(total_rooms,5))
summary(lm.fit3)
lm.fit3=lm(median_house_value~poly(total_bedrooms,5))
summary(lm.fit3)
# finding out the correlation between variables through visualization and plotting
require(corrplot)
houseCor <- housingData[,1:9]
houseCor <- na.omit(houseCor)
houses <- cor(houseCor)
corrplot(houses, method = "circle")
houseCorMat <- as.data.frame(corrplot(houses,method = "number"))
lm.fit3=lm(median_house_value~poly(total_bedrooms,5))
summary(lm.fit3)
lm.fit3=lm(median_house_value~poly(population,5))
summary(lm.fit3)
lm.fit3=lm(median_house_value~poly(households,5))
summary(lm.fit3)
lm.fit3=lm(median_house_value~poly(median_income,5))
summary(lm.fit3)
# multiple linear regression
lm.fit=lm(median_house_value~median_income+households,data=housingData)
summary(lm.fit)
lm.fit=lm(median_house_value~.,data=housingData)
summary(lm.fit)
houseCorMat <- as.data.frame(corrplot(houses,method = "number"))
nrow(housinData)
ncol(housingData)
nrow(housinData)
nrow(housingData)
housingData <- na.omit(housingData)
lm.fit5=lm(median_house_value~factor(ocean_proximity) + median_house_value,data=housingData)
summary(lm.fit5)
lm.fit5=lm(median_house_value~factor(ocean_proximity) + factor(ocean_proximity),data=housingData)
summary(lm.fit5)
lm.fit5=lm(median_house_value~factor(ocean_proximity) + poly(longitude,5),data=housingData)
summary(lm.fit5)
lm.fit5=lm(median_house_value~factor(ocean_proximity) + factor(ocean_proximity),data=housingData)
summary(lm.fit5)
lm.fit5=lm(median_house_value~median_income + factor(ocean_proximity),data=housingData)
summary(lm.fit5)
lm.fit5=lm(median_house_value~median_income + factor(ocean_proximity) + poly(longitude, 5),data=housingData)
summary(lm.fit5)
lm.fit5=lm(median_house_value~median_income + factor(ocean_proximity) + I(housing_median_age^2),data=housingData)
summary(lm.fit5)
lm.fit5=lm(median_house_value~median_income + factor(ocean_proximity) + log(total_rooms),data=housingData)
summary(lm.fit5)
plot(longitude,median_house_value)
abline(lm.fit,lwd=3,col="red")
predict(lm.fit,data.frame(longitude=(c(5,10,15))), interval="prediction")
plot(longitude,median_house_value)
predict(lm.fit,data.frame(latitude=(c(5,10,15))), interval="prediction")
plot(latitude,median_house_value)
abline(lm.fit,lwd=3,col="red")
predict(lm.fit,data.frame(latitude=(c(5,10,15))), interval="prediction")
lm.fit=lm(median_house_value~latitude)
plot(latitude,median_house_value)
abline(lm.fit,lwd=3,col="red")
lm.fit=lm(median_house_value~longitude)
plot(longitude,median_house_value)
abline(lm.fit,lwd=3,col="red")
lm.fit=lm(median_house_value~housing_median_age)
plot(housing_median_age,median_house_value)
abline(lm.fit,lwd=3,col="red")
lm.fit=lm(median_house_value~total_rooms)
plot(total_rooms,median_house_value)
abline(lm.fit,lwd=3,col="red")
lm.fit=lm(median_house_value~total_bedrooms)
plot(total_bedrooms,median_house_value)
abline(lm.fit,lwd=3,col="red")
lm.fit=lm(median_house_value~total_rooms)
plot(total_rooms,median_house_value)
abline(lm.fit,lwd=3,col="red")
lm.fit=lm(median_house_value~housing_median_age)
plot(housing_median_age,median_house_value)
abline(lm.fit,lwd=3,col="red")
lm.fit=lm(median_house_value~population)
plot(population,median_house_value)
abline(lm.fit,lwd=3,col="red")
lm.fit=lm(median_house_value~households)
plot(households,median_house_value)
abline(lm.fit,lwd=3,col="red")
lm.fit=lm(median_house_value~median_income)
plot(median_income,median_house_value)
abline(lm.fit,lwd=3,col="red")
lm.fit=lm(median_house_value~median_income+factor(ocean_proximity))
plot(median_income+factor(ocean_proximity),median_house_value)
abline(lm.fit,lwd=3,col="red")
lm.fit=lm(median_h
ouse_value~median_income+factor(ocean_proximity))
lm.fit=lm(median_house_value~median_income+factor(ocean_proximity))
plot(median_income,median_house_value)
abline(lm.fit,lwd=3,col="red")
lm.fit=lm(median_house_value~median_income+factor(ocean_proximity)+poly(longitude, 5))
plot(median_income,median_house_value)
abline(lm.fit,lwd=3,col="red")
ummary(lm(median_house_value~log(median_income),data=housingData))
summary(lm(median_house_value~log(longitude),data=housingData))
summary(lm(median_house_value~log(latitude),data=housingData))
summary(lm(median_house_value~log(housing_median_age),data=housingData))
summary(lm(median_house_value~log(total_rooms),data=housingData))
summary(lm(median_house_value~log(total_bedrooms),data=housingData))
summary(lm(median_house_value~log(population),data=housingData))
summary(lm(median_house_value~log(households),data=housingData))
summary(lm(median_house_value~log(median_income),data=housingData))
summary(lm(median_house_value~log(longitude),data=housingData))
summary(lm.fit3)
lm.fit3=lm(median_house_value~poly(median_income,5))
summary(lm.fit3)
lm.fit3=lm(median_house_value~poly(longitude,5))
summary(lm.fit3)
lm.fit3=lm(median_house_value~poly(latitude,5))
summary(lm.fit3)
lm.fit3=lm(median_house_value~poly(housing_median_age,5))
summary(lm.fit3)
lm.fit3=lm(median_house_value~poly(total_rooms,5))
summary(lm.fit3)
lm.fit3=lm(median_house_value~poly(total_bedrooms,5))
summary(lm.fit3)
lm.fit3=lm(median_house_value~poly(population,5))
summary(lm.fit3)
lm.fit3=lm(median_house_value~poly(households,5))
summary(lm.fit3)
View(houses)
ata <- read_csv("housing.csv")
# quick examination of the California Housing Dataset
View(housingData)
names(housingData)
# finding out the correlation between variables through visualization and plotting
require(corrplot)
houseCor <- housingData[,1:9]
houseCor <- na.omit(houseCor)
housingData <- na.omit(housingData)
houses <- cor(houseCor)
corrplot(houses, method = "circle")
houseCorMat <- as.data.frame(corrplot(houses,method = "number"))
lm.fit3=lm(median_house_value~poly(median_income,5))
summary(lm.fit3)
value~median_income+I(median_income^2))
summary(lm.fit2)
lm.fit2=lm(median_house_value~median_income+I(median_income^2))
summary(lm.fit2)
summary(lm(median_house_value~log(households),data=housingData))
lm.fit3=lm(median_house_value~poly(median_income,5), data=housingData)
summary(lm.fit3)
lm.fit3=lm(median_house_value~poly(median_income,5), data=housingData)
summary(lm.fit3)
lm.fit3=lm(median_house_value~poly(longitude,5), data=housingData)
summary(lm.fit3)
lm.fit3=lm(median_house_value~poly(latitude,5), data=housingData)
summary(lm.fit3)
lm.fit3=lm(median_house_value~poly(housing_median_age,5), data=housingData)
summary(lm.fit3)
lm.fit3=lm(median_house_value~poly(total_rooms,5), data=housingData)
summary(lm.fit3)
lm.fit3=lm(median_house_value~poly(total_bedrooms,5), data=housingData)
summary(lm.fit3)
lm.fit3=lm(median_house_value~poly(population,5), data=housingData)
summary(lm.fit3)
lm.fit3=lm(median_house_value~poly(households,5), data=housingData)
summary(lm.fit3)
lm.fit6=lm(median_house_value~median_income+factor(ocean_proximity)+poly(longitude, 5))
plot(median_income,median_house_value)
abline(lm.fit6,lwd=3,col="red")
lm.fit6=lm(median_house_value~median_income+factor(ocean_proximity)+poly(longitude, 5), data=housingData)
plot(median_income,median_house_value)
abline(lm.fit6,lwd=3,col="red")
lm.fit6=lm(median_house_value~median_income+factor(ocean_proximity)+poly(longitude, 5), data=housingData)
plot(median_income,median_house_value, data=housingData)
summary(lm.fit4)
ary(tidyverse)
require(MASS)
require(ISLR)
# importing dataset - hard coded
housingData <- read_csv("housing.csv")
# quick examination of the California Housing Dataset
View(housingData)
names(housingData)
# finding out the correlation between variables through visualization and plotting
require(corrplot)
houseCor <- housingData[,1:9]
houseCor <- na.omit(houseCor)
housingData <- na.omit(housingData)
houses <- cor(houseCor)
corrplot(houses, method = "circle")
houseCorMat <
houseCorMat <- as.data.frame(corrplot(houses,method = "number"))
# finding out which variables have a correlation of more than 50%
names(houseCorMat) <- names(houseCor)
row.names(houseCorMat)[abs(houseCorMat$total_rooms) > 0.50]
# predicting the median house value as a function of other variables
lm.fit=lm(median_house_value~median_income,data=housingData)
attach(housingData)
lm.fit=lm(median_house_value~median_income)
summary(lm.fit)
# confidence interval of 95%
names(lm.fit)
coef(lm.fit)
confint(lm.fit)
# visualizing data
predict(lm.fit,data.frame(lstat=(c(5,10,15))), interval="confidence")
predict(lm.fit,data.frame(lstat=(c(5,10,15))), interval="prediction")
plot(median_income,median_house_value)
abline(lm.fit)
abline(lm.fit,lwd=3)
abline(lm.fit,lwd=3,col="red")
# multiple linear regression
lm.fit=lm(median_house_value~median_income+households,data=housingData)
summary(lm.fit)
lm.fit=lm(median_house_value~.,data=housingData)
summary(lm.fit)
lm.fit1=lm(median_house_value~.-median_income,data=housingData)
summary(lm.fit1)
lm.fit1=update(lm.fit, ~.-median_income)
plot(total_bedrooms,median_house_value)
abline(lm.fit)
abline(lm.fit,lwd=3)
abline(lm.fit,lwd=3,col="red")
lm.fit=lm(median_house_value~total_bedrooms)
plot(total_bedrooms,median_house_value)
abline(lm.fit)
abline(lm.fit,lwd=3)
abline(lm.fit,lwd=3,col="red")
lm.fit=lm(median_house_value~population)
plot(population,median_house_value)
abline(lm.fit)
abline(lm.fit,lwd=3)
abline(lm.fit,lwd=3,col="red")
# importing dataset - hard coded
housingData <- read_csv("https://cometmail-my.sharepoint.com/:x:/g/personal/cxj170002_utdallas_edu/EQA26aE9jwZFjVYzWr1zi8gBjp0X6-aX7aZeAl24hoKWaw?e=M9PPDM")
# importing packages for regression and tidyverse
library(tidyverse)
require(MASS)
require(ISLR)
# quick examination of the California Housing Dataset
View(housingData)
# importing dataset - hard coded
housingData <- read_csv("https://cometmail-my.sharepoint.com/:x:/g/personal/cxj170002_utdallas_edu/EQA26aE9jwZFjVYzWr1zi8gBjp0X6-aX7aZeAl24hoKWaw?e=M9PPDM")
# importing dataset - hard coded
housingData <- read_csv("https://cometmail-my.sharepoint.com/:x:/g/personal/cxj170002_utdallas_edu/EQA26aE9jwZFjVYzWr1zi8gBjp0X6-aX7aZeAl24hoKWaw?e=M9PPDM")
# importing dataset - hard coded
housingData <- read_csv("https://cometmail-my.sharepoint.com/:x:/g/personal/cxj170002_utdallas_edu/EQA26aE9jwZFjVYzWr1zi8gBjp0X6-aX7aZeAl24hoKWaw?e=M9PPDM")
# importing dataset - hard coded
housingData <- read_csv("https://cometmail-my.sharepoint.com/personal/cxj170002_utdallas_edu/_layouts/15/download.aspx?UniqueId=a1e93600%2D8f3d%2D4506%2D8d56%2D335abd738bc8")
# importing dataset - hard coded
housingData <- read_csv("https://cometmail-my.sharepoint.com/personal/cxj170002_utdallas_edu/_layouts/15/download.aspx?UniqueId=a1e93600%2D8f3d%2D4506%2D8d56%2D335abd738bc8")
# importing dataset - hard coded
housingData <- read_csv("https://cometmail-my.sharepoint.com/personal/cxj170002_utdallas_edu/_layouts/15/download.aspx?UniqueId=a1e93600%2D8f3d%2D4506%2D8d56%2D335abd738bc8")
# importing dataset - hard coded
housingData <- read_csv("https://www.dropbox.com/s/llq5c6lrtu4mdgf/housing.csv?dl=1")
# importing packages for regression and tidyverse
library(tidyverse)
require(MASS)
require(ISLR)
# importing dataset - hard coded
housingData <- read_csv("https://www.dropbox.com/s/llq5c6lrtu4mdgf/housing.csv?dl=1")
re(corrplot)
houseCor <- housingData[,1:9]
houseCor <- na.omit(houseCor)
housingData <- na.omit(housingData)
houses <- cor(houseCor)
corrplot(houses, method = "circle")
houseCor
require(corrplot)
houseCor <- housingData[,1:9]
houseCor <- na.omit(houseCor)
housingData <- na.omit(housingData)
houses <- cor(houseCor)
corrplot(houses, method = "circle")
houseCorMat <- as.data.frame(corrplot(houses,method = "number"))
lm.fit=lm(median_house_value~median_income,data=housingdata)
plot(median_income,median_house_value)
abline(lm.fit)
abline(lm.fit,lwd=3)
lm.fit=lm(median_house_value~median_income,data=housingData)
plot(median_income,median_house_value, data=housingData)
lm.fit=lm(median_house_value~longitude,data=housingdata)
plot(longitude,median_house_value)
abline(lm.fit)
abline(lm.fit,lwd=3)
